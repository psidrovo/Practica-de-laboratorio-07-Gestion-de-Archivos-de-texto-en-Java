package ec.edu.ups.vista;

import ec.edu.ups.controlador.ControladorEncriptado;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 * VISTA ENCRIPTADO. Esta vista se encarga de manejar todo sobre el encriptado
 * de un documento tendremos un menu para nuevo, guardar, cerrar y salir.
 * 
 * ruta String -> Se le pasara la ruta donde se desea guardar
 * texto String -> Se le pasara el texto del textArea
 * controladorEncriptado ControladorEncriptado -> Se almacenara el objeto que 
 * controla el Encriptado.
 *
 * @author Paul Idrovo, Dennis Dutan
 */
public class Encriptacion extends javax.swing.JFrame {

    private String ruta;
    private String texto;
    private ControladorEncriptado controladorEncriptado;

    /**
     * CONSTRUCTOR. Se inicializa los componentes graficos y las variables
     * globales
     */
    public Encriptacion() {
        initComponents();
        this.ruta = "";
        this.texto = "";
        this.controladorEncriptado = new ControladorEncriptado();
        this.setLocationRelativeTo(this);
        this.setResizable(false);
        this.setIconImage(new ImageIcon(getClass().getResource("/ec/edu/ups/multimedia/carpeta.png")).getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtaTexto = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        mnNuevo = new javax.swing.JMenuItem();
        mnGuardar = new javax.swing.JMenuItem();
        mnCerrar = new javax.swing.JMenuItem();
        mnSalir = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ENCRIPTADO DE DOCUMENTOS");

        txtaTexto.setColumns(20);
        txtaTexto.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        txtaTexto.setRows(5);
        jScrollPane1.setViewportView(txtaTexto);

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel1.setText("INGRESE EL TEXTO QUE DESEA ECNRIPTAR");

        fileMenu.setMnemonic('f');
        fileMenu.setText("Archivo");

        mnNuevo.setMnemonic('o');
        mnNuevo.setText("Nuevo");
        mnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnNuevoActionPerformed(evt);
            }
        });
        fileMenu.add(mnNuevo);

        mnGuardar.setMnemonic('x');
        mnGuardar.setText("Guardar");
        mnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnGuardarActionPerformed(evt);
            }
        });
        fileMenu.add(mnGuardar);

        mnCerrar.setMnemonic('o');
        mnCerrar.setText("Cerrar");
        mnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnCerrarActionPerformed(evt);
            }
        });
        fileMenu.add(mnCerrar);

        mnSalir.setMnemonic('o');
        mnSalir.setText("Salir");
        mnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnSalirActionPerformed(evt);
            }
        });
        fileMenu.add(mnSalir);

        menuBar.add(fileMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 669, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * OPCION MENU GUARDAR. Mediante el evento de action performed se ejecuta el
     * JFileChooser el mismo que nos ayudara a buscar la ruta de donde deseamos
     * guardar. Este se puede personalizar segun nuestras necesidades, en este
     * caso fc.setDialogTitle("") se le pasa un titulo dependiendo la necesidad
     * del programador, en este caso es BUSCAR DOCUMENTO.
     * fc.setCurrentDirectory(File) se le pasa objeto tipo file que debe
     * tener la ruta donde deseamos que se abra como predeterminado, en caso de
     * no encontrarla se ira a la ruta predeterminada del sistema de Documentos.
     * fc.setFileFilter(FileNameExtensionFilter) se le pasa el tipo de archivos
     * que el usuario debe elegir, el primer atributo es el nombre que queremos
     * para visualizar y el segundo la extencion del archivo. Y abrimos la 
     * ventana de guardar mediante fc.showSaveDialog;
     *
     * Luego de tener la ruta mediante FileWriter creamos el documento y le
     * guardamos el texto encriptado por el metodo encriptar del controlador
     * Encriptado.
     *
     * @see FileWriter
     * @see JFileChooser
     * @see ControladorEncriptado
     * @param evt
     */
    private void mnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnGuardarActionPerformed

        texto = controladorEncriptado.encriptar(txtaTexto.getText());
        JFileChooser fc = new JFileChooser();
        fc.setDialogTitle("BUSCAR DOCUMENTO");
        fc.setCurrentDirectory(new File("D:\\"));
        fc.setFileFilter(new FileNameExtensionFilter("Notas.txt", "txt"));
        if (fc.showSaveDialog(this) == 0) {
            ruta = fc.getSelectedFile().toString() + ".txt";
        }
        try {
            FileWriter archivoEscritura = new FileWriter(ruta, true);
            BufferedWriter escritura = new BufferedWriter(archivoEscritura);
            escritura.append(texto);
            escritura.close();
            archivoEscritura.close();
        } catch (FileNotFoundException e1) {
            System.out.println("Ruta de archivo no encontrada");
        } catch (IOException e2) {
            System.out.println("Eror de escritura");
        } catch (Exception e3) {
            System.out.println("Error General");
        }
    }//GEN-LAST:event_mnGuardarActionPerformed

    /**
     * OPCION MENU CERRAR. Esta opcion del menu nos ayuda para cerrar el
     * documento si lo creamos por accidente.
     *
     * @param evt
     */
    private void mnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnCerrarActionPerformed
        txtaTexto.setEditable(false);
        txtaTexto.setText("");
    }//GEN-LAST:event_mnCerrarActionPerformed
    /**
     * OPCION MENU NUEVO. Esta opcion del menu nos ayuda para crear un nuevo
     * documento.
     *
     * @param evt
     */
    private void mnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnNuevoActionPerformed
        txtaTexto.setEditable(true);
        txtaTexto.setText("");
    }//GEN-LAST:event_mnNuevoActionPerformed

    /**
     * OPCION MENU SALIR. Esta opcion del menu nos ayuda para salir del
     * programa.
     *
     * @param evt
     */
    private void mnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_mnSalirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Encriptacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Encriptacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Encriptacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Encriptacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException e) {
                    System.out.println("Error setting Java LAF: " + e);
                }
                new Encriptacion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu fileMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem mnCerrar;
    private javax.swing.JMenuItem mnGuardar;
    private javax.swing.JMenuItem mnNuevo;
    private javax.swing.JMenuItem mnSalir;
    private javax.swing.JTextArea txtaTexto;
    // End of variables declaration//GEN-END:variables

}
